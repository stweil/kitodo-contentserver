<?xml version="1.0"?>

<project name="basic command plugins" default="all">


    <!-- Include build and deployment options -->
    <property file="build.properties" prefix="build"/>

    <property name="build.dir" value="build" />

    <property name="build.javac.target" value="1.7"/>
    <property name="build.javac.source" value="1.7"/>

    <property name="build.dist.name" value="kitodo-contentserver" />
    <property name="build.dist.version" value="2.0.0" />

    <property name="dist.dir" value="dist" />

    <property name="jarfile" value="${build.dist.name}-${build.dist.version}.jar" />
    <property name="dir.lib" value="${basedir}/WebContent/WEB-INF/lib" />

    <property name="src.dir" value="${basedir}/src" />

    <!-- normally overridden in build.properties -->
    <property name="build.tomcat.dir.lib" value="${dir.lib}" />

    <path id="compile.classpath">
        <fileset dir="${dir.lib}" />
        <fileset dir="${build.tomcat.dir.lib}" />
        <pathelement location="${build.servlet.jar}" />
        <pathelement path="${java.class.path}" />
    </path>

    <target name="all" depends="jar" />

    <target name="clean">
        <delete dir="${build.dir}" />
        <delete dir="${dist.dir}" />
    </target>

    <target name="checkServletClassPath">
        <condition property="servletapi.present">
            <available classname="javax.servlet.http.HttpServlet" classpathref="compile.classpath" />
        </condition>
    </target>

    <target name="checkConditions" depends="checkJavaVersion, checkServletApi" />

    <!-- check for Java version 1.7 -->
    <target name="checkJavaVersion">
        <fail message="Build required at least version 1.7 of the Java compiler ">
            <condition>
                <and>
                    <contains string="${java.version}" substring="1.0"/>
                    <contains string="${java.version}" substring="1.1"/>
                    <contains string="${java.version}" substring="1.2"/>
                    <contains string="${java.version}" substring="1.3"/>
                    <contains string="${java.version}" substring="1.4"/>
                    <contains string="${java.version}" substring="1.5"/>
                    <contains string="${java.version}" substring="1.6"/>
                </and>
            </condition>
        </fail>
    </target>

    <target name="checkServletApi" depends="checkServletClassPath" unless="servletapi.present">
        <echo>Servlet API not found on classpath!</echo>
        <echo>run this build file via "ant -lib /path/to/servlet-api.jar or set build.tomcat.dir.lib property"</echo>
        <fail message="Servlet API is missing."/>
    </target>

    <target name="copyAdditionalNonJavaFiles">
        <copy todir="${build.dir}">
            <fileset dir="${src.dir}">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
    </target>

    <target name="createDirectories">
        <mkdir dir="${build.dir}" />
        <mkdir dir="${dist.dir}" />
    </target>

    <!-- jar build process -->
    <target name="jar" depends="checkConditions, createDirectories, copyAdditionalNonJavaFiles">
        <echo>compile sources</echo>
        <javac destdir="build"
            includeAntRuntime="false"
            source="${build.javac.source}"
            target="${build.javac.target}"
            encoding="UTF-8"
            debug="true"
            debuglevel="lines,vars,source"
            classpathref="compile.classpath"
            srcdir="${src.dir}">
        </javac>
        <echo>generate jar file</echo>
        <jar destfile="${dist.dir}/${jarfile}">
            <fileset dir="${build.dir}" />
        </jar>
    </target>

</project>
